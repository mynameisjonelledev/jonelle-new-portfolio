import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createContext, useContext } from 'react';
import useCursorifyReducer from './hooks/useCursorifyReducer';
import Cursorify from './Cursorify';
import { DefaultCursor } from '../DefaultCursor';
import useBreakpoint from './hooks/useBreakpoint';
const defaultCursorifyState = {
    cursor: _jsx(DefaultCursor, {}),
    delay: 1,
    opacity: 1,
    defaultCursorVisible: false,
    breakpoint: 0,
    cursorStyle: 'default',
    mouseState: 'default',
};
const CursorifyStateContext = createContext(defaultCursorifyState);
const CursorifyDispatchContext = createContext(null);
export const CursorifyProvider = ({ children, ...props }) => {
    const [state, dispatch] = useCursorifyReducer({
        ...defaultCursorifyState,
        ...props,
    });
    const enabled = useBreakpoint(state.breakpoint);
    return (_jsx(CursorifyStateContext.Provider, { value: state, children: _jsxs(CursorifyDispatchContext.Provider, { value: dispatch, children: [enabled && _jsx(Cursorify, { children: state.cursor }), children] }) }));
};
export function useCursorifyState() {
    const context = useContext(CursorifyStateContext);
    if (!context) {
        throw new Error('Cannot find Cursorify Provider. You need to use Cursorify Provider within its parent component.');
    }
    return context;
}
export function useCursorifyDispatch() {
    const context = useContext(CursorifyDispatchContext);
    if (!context) {
        throw new Error('Cannot find Cursorify Provider. You need to use Cursorify Provider within its parent component.');
    }
    return context;
}
